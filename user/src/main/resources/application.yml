server:
  port: 8794
  servlet:
    context-path: /

spring:
  application:
    name: user #스프링 컨피그의 디렉토리명 과 일치해야 함
  profiles:
    active:
      default
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/miru?serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: root
    password: a707!1402
    driver-class-name: com.mysql.cj.jdbc.Driver
  mvc:
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  main:
    allow-bean-definition-overriding: 'true'

mybatis:
  type-aliases-package: com.back.miru.model
  mapper-locations: mapper/**/*.xml
external:
  email:
    username: js97621@gmail.com
    password: fdniriemwghmjapx

eureka:
  instance:
    prefer-ip-address: true
  client:
    register-with-eureka: true # 유레카 서비스에 등록 여부
    fetch-registry: true
    registryFetchIntervalSeconds: 30 # eureka에게 서비스 정보를 가져오는 주기
    disable-delta: true # eureka에게 서비스 정보를 가져올때 변경된 내용만 가져온다. (false로 하면 전체를 가져오기에 대역폭 낭비이다.)
    serviceUrl:
      defaultZone: http://localhost:8788/eureka/

management:
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com:
      back:
        miru:
          controller: debug
    root: info

hystrix:
threadpool:
  default:
    coreSize: 100  # Hystrix Thread Pool default size
    maximumSize: 500  # Hystrix Thread Pool default size
    keepAliveTimeMinutes: 1
    allowMaximumSizeToDivergeFromCoreSize: true
command:
  default:
    execution:
      isolation:
        thread:
          timeoutInMilliseconds: 3000     #설정 시간동안 처리 지연발생시 timeout and 설정한 fallback 로직 수행
    circuitBreaker:
      requestVolumeThreshold: 2                # 설정수 값만큼 요청이 들어온 경우만 circut open 여부 결정 함
      errorThresholdPercentage: 50        # requestVolumn값을 넘는 요청 중 설정 값이상 비율이 에러인 경우 circuit open
      enabled: true